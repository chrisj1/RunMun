@using RunMun.Views.Manage
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    @{
        var admin = User.IsInRole("Administrator");
        var secretariat = User.IsInRole("Secretariat");
        if (admin || secretariat)
        {
            <li>Secretariat</li>
            <li class="@ManageNavPages.CommitteesNavClass(ViewContext)"><a asp-action="Committees">Committees</a></li>
            <li >Administration</li>
            <li class="@ManageNavPages.UsersNavClass(ViewContext)"><a asp-action="Users">Users</a></li>
        }
    }
    <li>My Account</li>
    <li class="@ManageNavPages.ProfileNavClass(ViewContext)"><a asp-action="Profile">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-action="TwoFactorAuthentication">Two-factor authentication</a></li>
</ul>

